EXTRA_DIST = config.h data_manager.h matxin_string_utils.h simpleregex.h string_utils.h utf_converter.h XML_reader.h gen_fst2regex.sh gen_Matxin_translator.sh deformat.xsl txt-format.xml rtf-format.xml html-format.xml

bin_PROGRAMS = matxin-xfer-lex matxin-xfer-intra matxin-xfer-inter matxin-xfer-prep matxin-gen-inter matxin-gen-intra \
	       matxin-gen-morph ST_verb \
               reFormat  
#txt-deformat html-deformat rtf-deformat

bin_SCRIPTS = matxin-gen-modes fst2regex.pl

matxin_xfer_lex_SOURCES = matxin_xfer_lex.cc utf_converter.cc data_manager.cc XML_reader.cc simpleregex.cc matxin_string_utils.cc matxin_string_utils.h string_utils.cc string_utils.h
matxin_xfer_lex_LDADD =  -lboost_filesystem

matxin_xfer_intra_SOURCES = matxin_xfer_intra.cc utf_converter.cc data_manager.cc XML_reader.cc simpleregex.cc matxin_string_utils.cc matxin_string_utils.h
matxin_xfer_intra_LDADD =      -lboost_filesystem

matxin_xfer_inter_SOURCES = matxin_xfer_inter.cc utf_converter.cc data_manager.cc XML_reader.cc simpleregex.cc matxin_string_utils.cc matxin_string_utils.h
matxin_xfer_inter_LDADD =      -lboost_filesystem

matxin_xfer_prep_SOURCES = matxin_xfer_prep.cc utf_converter.cc data_manager.cc XML_reader.cc simpleregex.cc matxin_string_utils.cc matxin_string_utils.h
matxin_xfer_prep_LDADD =      -lboost_filesystem

ST_verb_SOURCES = ST_verb.cc utf_converter.cc data_manager.cc XML_reader.cc simpleregex.cc matxin_string_utils.cc matxin_string_utils.h
ST_verb_LDADD =      -lboost_filesystem

matxin_gen_inter_SOURCES = matxin_gen_inter.cc utf_converter.cc data_manager.cc XML_reader.cc simpleregex.cc matxin_string_utils.cc matxin_string_utils.h
matxin_gen_inter_LDADD =      -lboost_filesystem

matxin_gen_intra_SOURCES = matxin_gen_intra.cc utf_converter.cc data_manager.cc XML_reader.cc simpleregex.cc matxin_string_utils.cc matxin_string_utils.h
matxin_gen_intra_LDADD =      -lboost_filesystem

matxin_gen_morph_SOURCES = matxin_gen_morph.cc data_manager.cc utf_converter.cc XML_reader.cc simpleregex.cc matxin_string_utils.cc matxin_string_utils.h
matxin_gen_morph_LDADD =      -lboost_filesystem

reFormat_SOURCES = reFormat.cc utf_converter.cc data_manager.cc XML_reader.cc simpleregex.cc matxin_string_utils.cc matxin_string_utils.h

#txt_deformat_SOURCES = txt-deformat.cc
#html_deformat_SOURCES = html-deformat.cc
#rtf_deformat_SOURCES = rtf-deformat.cc

#txt-deformat.cc: txt-format.xml Makefile.am deformat.xsl
#	$(XSLTPROC) --stringparam mode matxin deformat.xsl txt-format.xml | $(FLEX) -Cfer -t >$@

# html-deformat.cc: html-format.xml Makefile.am deformat.xsl
# 	$(XSLTPROC) --stringparam mode matxin deformat.xsl html-format.xml | $(FLEX) -Cfer -t >$@

#rtf-deformat.cc: rtf-format.xml Makefile.am deformat.xsl
#	$(XSLTPROC) --stringparam mode matxin deformat.xsl rtf-format.xml | $(FLEX) -Cfer -t >$@

#Matxin_translator: Makefile.am gen_Matxin_translator.sh
#	@echo "Creating $@ script"
#	@echo "#!$(BASH)" > $@
#	@echo "MATXIN_DIR=\"$(prefix)\"" >> $@
#	@cat gen_Matxin_translator.sh >> $@
#	@chmod a+x $@
#
matxin-gen-modes: Makefile.am modes-header.sh
	@echo "Creating matxin-gen-modes script"
	@echo "#!$(BASH)" > $@
	@echo "MATXIN_DIR="$(matxindir) >> $@
	@cat modes-header.sh >> $@
	@echo "$(XMLLINT) --dtdvalid $(matxindir)/modes.dtd --noout \$$FILE1 && \\" >> $@
	@if [ `basename $(XSLTPROC)` == xsltproc ]; \
          then echo "$(XSLTPROC) --stringparam prefix $(prefix)/bin --stringparam dataprefix \$$FULLDIRNAME  $(matxindir)/modes2bash.xsl \$$FILE1 | awk -f $(matxindir)/matxin-createmodes.awk PARAM=\$$FULLDIRNAME"; \
          else echo "$(XSLTPROC) $(matxindir)/modes2bash.xsl \$$FILE1 \\\$$prefix=$(prefix)/bin \\\$$dataprefix=\$$FULLDIRNAME| awk -f $(matxindir)/matxin-createmodes.awk PARAM=\$$FULLDIRNAME"; \
          fi >> $@ 
	@chmod a+x $@

fst2regex.pl: Makefile.am gen_fst2regex.sh
	@echo "Creating $@ script"
	@echo "#!$(PERL)" > $@
	@cat gen_fst2regex.sh >> $@
	@chmod a+x $@
